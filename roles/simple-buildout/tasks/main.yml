---
- name: Make sure we have an updated copy of the repository
  become: yes
  become_user: "{{ target_user }}"
  git:
    repo: "{{ repo_url }}"
    dest: "{{ target_dir }}"
    update: yes
    version: "{{ repo_branch }}"
    accept_hostkey: True
    # discard all modified files in working directory
    force: yes
  register: repo_state
  environment: "{{ proxy_env }}"

- name: Perform build
  become: yes
  become_user: "{{ target_user }}"
  command: "{{ item }}"
  args:
    chdir: "{{ target_dir }}"
  with_items: "{{ target_commands }}"
  when: "repo_state is changed"
  register: command_result
  ignore_errors: true
  environment: "{{ proxy_env }}"

# if the command failed, roll the git repository back one commit so that
# on the next run, we will re-run the build
- name: Revert git repo
  become: yes
  become_user: "{{ target_user }}"
  command: "git reset --hard HEAD^"
  args:
    chdir: "{{ target_dir }}"
  when:
    - repo_state is changed
    - command_result is failed

- name: Indicate failure
  fail: msg="the buildout command failed"
  when:
    - repo_state is changed
    - command_result is failed
